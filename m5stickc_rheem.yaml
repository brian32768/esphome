substitutions:
  devicename: m5stick00_econet
  friendly_name: "Water heater"
  device_description: "Rheem Electric Tank Water Heater"
  static_ip: 192.168.123.208
<<: !include common.yaml

# AXP192 power manager must be
# present to control LCD backlight.

packages:
  econet: !include econet_electric_tank_water_heater.yaml

econet:
  dst_address: 0x1280

climate:

  - id: !extend econet_climate
    custom_presets:
      0: "Off"
      1: "Eco Mode"
      2: "Heat Pump"
      3: "High Demand"
      4: "Electric"
      # Vacation preset doesn't seem to have any effect
      # 5: "Vacation"

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO37
      inverted: true
    name: Button A
    on_press:
      then:
        - light.turn_on: led1
    on_release:
      then:
        - light.turn_off: led1
        
  - platform: gpio
    pin:
      number: GPIO39
      inverted: true
    name: Button B
    on_press:
      then:
        - light.turn_on: led1
    on_release:
      then:
        - light.turn_off: led1

  - platform: axp192
    axp192_id: axp
    type: battery_present
    name: "Power"
  - platform: axp192
    axp192_id: axp
    type: charge_indicate
    id: axp_charger
    name: "Charger"

  - platform: econet
    name: "Compressor"
    id: compressor
    sensor_datapoint: COMP_RLY
    device_class: "running"

text_sensor:
  - platform: econet
    name: "Fan Speed"
    id: fan_speed
    sensor_datapoint: FAN_CTRL
    icon: "mdi:fan"
  - platform: econet
    name: "Unit Type"
    id: unittype
    sensor_datapoint: UNITTYPE
    request_mod: 5
    request_once: true
    icon: "mdi:information-box"
    entity_category: "diagnostic"
    
output:
  - platform: ledc
    pin: 10
    inverted: true
    id: builtin_light

  # Power supply and backlight
  - platform: axp192
    axp192_id: axp
    output: ldo3
    id: axp_ldo3

light:
  - platform: monochromatic
    name: Light
    output: builtin_light
    id: led1
    default_transition_length: 250ms

  - platform: monochromatic
    name: "Backlight"
    output: axp_ldo3
    restore_mode: ALWAYS_ON

sensor:
  - platform: wifi_signal
    name: "WiFi Signal"
    update_interval: 60s
    id: wifi_dbm

  - platform: axp192
    axp192_id: axp
    type: battery_voltage
    name: "Voltage"
  - platform: axp192
    axp192_id: axp
    type: battery_charge_current
    name: "Current"
    filters:
      - sliding_window_moving_average:
          window_size: 15
          send_every: 15

  - platform: econet
    name: "Ambient Temperature"
    id: ambient_temp
    sensor_datapoint: AMBIENTT
    unit_of_measurement: "째F"
    accuracy_decimals: 1
    device_class: "temperature"
    state_class: "measurement"
    entity_category: "diagnostic"
  - platform: econet
    name: "Evaporator Temperature"
    id: evaporator_temp
    sensor_datapoint: EVAPTEMP
    unit_of_measurement: "째F"
    accuracy_decimals: 1
    device_class: "temperature"
    state_class: "measurement"
    entity_category: "diagnostic"
  - platform: econet
    name: "Suction Temperature"
    id: suction_temp
    sensor_datapoint: SUCTIONT
    unit_of_measurement: "째F"
    accuracy_decimals: 1
    device_class: "temperature"
    state_class: "measurement"
    entity_category: "diagnostic"
  - platform: econet
    name: "Discharge Temperature"
    id: discharge_temp
    sensor_datapoint: DISCTEMP
    unit_of_measurement: "째F"
    accuracy_decimals: 1
    device_class: "temperature"
    state_class: "measurement"
    entity_category: "diagnostic"
  - platform: econet
    name: "Compressor Runtime"
    id: hours_compressor
    sensor_datapoint: HRS_COMP
    request_mod: 5
    unit_of_measurement: "h"
    accuracy_decimals: 6
    device_class: "duration"
    state_class: "total_increasing"
    entity_category: "diagnostic"
  - platform: econet
    name: "Fan Low Speed Runtime"
    id: hours_fan_low_speed
    sensor_datapoint: HRSLOFAN
    request_mod: 5
    unit_of_measurement: "h"
    accuracy_decimals: 6
    device_class: "duration"
    state_class: "total_increasing"
    entity_category: "diagnostic"
  - platform: econet
    name: "Fan High Speed Runtime"
    id: hours_fan_high_speed
    sensor_datapoint: HRSHIFAN
    request_mod: 5
    unit_of_measurement: "h"
    accuracy_decimals: 6
    device_class: "duration"
    state_class: "total_increasing"
    entity_category: "diagnostic"
  - platform: econet
    name: "Energy"
    id: energy
    sensor_datapoint: TOTALKWH
    request_mod: 5
    unit_of_measurement: "kWh"
    accuracy_decimals: 3
    device_class: "energy"
    state_class: "total_increasing"
    entity_category: "diagnostic"
  - platform: econet
    name: "AC Current RMS"
    id: ac_current_rms
    sensor_datapoint: I_RMSVAL
    request_mod: 5
    unit_of_measurement: "A"
    accuracy_decimals: 3
    device_class: "current"
    state_class: "measurement"
  - platform: econet
    name: "Expansion Valve Current Position"
    id: expansion_valve_current_position
    sensor_datapoint: EXACTUAL
    request_mod: 5
    accuracy_decimals: 1
    unit_of_measurement: "%"
    entity_category: "diagnostic"
    
spi:
  clk_pin: GPIO13
  mosi_pin: GPIO15

i2c:
   - id: bus_a
     sda: GPIO21
     scl: GPIO22
     scan: True

axp192:
  id: axp
  address: 0x34
  update_interval: 60s
  charge_voltage: 4150mV
  dcdc1_voltage: 3300mv
  dcdc3_voltage: 1.5V

font:
  - file: 'unifont.ttf'
    id: font1
    size: 12

  - file: 'unifont.ttf'
    id: font2
    size: 36

  - file: 'unifont.ttf'
    id: font3
    size: 14

color:
  - id: GREEN
    red: 0%
    green: 100%
    blue: 0%
  - id: BLUE
    red: 0%
    green: 0%
    blue: 100%
  - id: RED
    red: 100%
    green: 0%
    blue: 0%
  - id: YELLOW
    red: 100%
    green: 100%
    blue: 0%

# builtin 80x160 TFT
display:
  - platform: ili9xxx
    model: st7735
    dc_pin: GPIO23
    reset_pin: GPIO18
    cs_pin: GPIO5
    invert_colors: true # black background
    rotation: 90
    dimensions:
    # yes I know... it's wrong, should be 80, but use whatever works for you
      width: 120
    # using 160 left a little noise on the screen, maybe it's really 
      height: 162
    lambda: |-
      // center everything, so use X=height/2
      //
      //    o  normal screen is ip address, time of day, signal strength
      //       (I probably want the water temp and air temp here instead)
      //
      //    o  startup screen is just "No Wifi"
      //
      
      if (id(wifi_dbm).has_state()) {
        char str[128];

        // IP ADDRESS (static)
        it.print(80, 10, id(font3), GREEN, TextAlign::TOP_CENTER, "${static_ip}");

        // TIME 
        it.strftime(80, 24, id(font2), YELLOW, TextAlign::TOP_CENTER, "%I:%M %p", id(homeassistant_time).now());


        // SIGNAL
        sprintf(str, "%.0f dBm", id(wifi_dbm).state);
        it.print(80, 70, id(font3), BLUE, TextAlign::CENTER, str);

      } else {
        it.print(80, 40, id(font2), RED, TextAlign::CENTER, "No Wifi");
      }

time:
  - platform: homeassistant
    id: homeassistant_time
